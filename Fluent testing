local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "LEGENDOX" .. Fluent.Version,
    SubTitle = "by dawid",
    TabWidth = 130,
    Size = UDim2.fromOffset(530, 420),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

SaveManager:LoadAutoloadConfig()

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "Toggleui"
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false

local Toggle = Instance.new("TextButton")
Toggle.Name = "Toggle"
Toggle.Parent = ScreenGui
Toggle.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Toggle.BackgroundTransparency = 0.5
Toggle.Position = UDim2.new(0, 0, 0.454706937, 0)
Toggle.Size = UDim2.new(0, 50, 0, 50)
Toggle.Font = Enum.Font.SourceSans
Toggle.Text = ""
Toggle.TextColor3 = Color3.fromRGB(248, 248, 248)
Toggle.TextSize = 18.000
Toggle.Draggable = true

local Corner = Instance.new("UICorner")
Corner.CornerRadius = UDim.new(0.2, 0)
Corner.Parent = Toggle

local Image = Instance.new("ImageLabel")
Image.Name = "Icon"
Image.Parent = Toggle
Image.Size = UDim2.new(1, 0, 1, 0)
Image.BackgroundTransparency = 1
Image.Image = "rbxassetid://10723425539" 

local Corner2 = Instance.new("UICorner")
Corner2.CornerRadius = UDim.new(0.2, 0)
Corner2.Parent = Image

Toggle.MouseButton1Click:Connect(function()
    if gethui():FindFirstChild("ScreenGui") then
        gethui().ScreenGui.Enabled = not gethui().ScreenGui.Enabled
    end
end)

local Tabs = {
    Home = Window:AddTab({ Title = "Home", Icon = "" }),
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    Rebirth = Window:AddTab({ Title = "Rebirth", Icon = "" }),
    Info = Window:AddTab({ Title = "Info", Icon = "" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

-- Home Tab Functions
Tabs.Home:AddToggle({
    Title = "Auto Lock Character Position",
    Default = false,
    Callback = function(value)
        if value then
            game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
        else
            game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
        end
    end
})

Tabs.Home:AddSlider({
    Title = "Set Character Size",
    Min = 0,
    Max = 100,
    Default = 100,
    Callback = function(value)
        game.Players.LocalPlayer.Character.Humanoid.BodyScale.Value = value
    end
})

local gyms = {
    ["Beach"] = Vector3.new(0, 0, 0), -- replace with actual coordinates
    ["Frost Gym"] = Vector3.new(0, 0, 0), -- replace with actual coordinates
    ["Mythical Gym"] = Vector3.new(0, 0, 0), -- replace with actual coordinates
    ["Eternal Gym"] = Vector3.new(0, 0, 0), -- replace with actual coordinates
    ["Legend Gym"] = Vector3.new(0, 0, 0), -- replace with actual coordinates
    ["Muscle King Gym"] = Vector3.new(0, 0, 0), -- replace with actual coordinates
    ["Jungle Gym"] = Vector3.new(0, 0, 0) -- replace with actual coordinates
}

local teleportDropdown = Tabs.Home:AddDropdown({
    Title = "Teleport to Gyms",
    Values = gyms,
    Callback = function(value)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(gyms[value])
    end
})

-- Main Tab Functions
Tabs.Main:AddToggle({
    Title = "Hit Lock",
    Default = false,
    Callback = function(value)
        if value then
            -- Add hit lock functionality here
        else
            -- Remove hit lock functionality here
        end
    end
})

local rocks = {
    "Beach Golden Rock",
    "Frost Frozen Rock",
    "Mythical Rock",
    "Eternal Rock",
    "Legends Rock",
    "Muscle King Mountain",
    "Jungle Rock"
}

local rockDropdown = Tabs.Main:AddDropdown({
    Title = "Select Rock",
    Values = rocks,
    Callback = function(value)
        -- Add rock selection functionality here
    end
})

Tabs.Main:AddToggle({
    Title = "Auto Fast Punch",
    Default = false,
    Callback = function(value)
        if value then
            -- Add auto fast punch functionality here
        else
            -- Remove auto fast punch functionality here
        end
    end
})

Tabs.Main:AddToggle({
    Title = "No Animation Punch",
    Default = false,
    Callback = function(value)
        if value then
            -- Add no animation punch functionality here
        else
            -- Remove no animation punch functionality here
        end
    end
})

Tabs.Main:AddLabel("Auto Farms")
Tabs.Main:AddToggle({
    Title = "Auto Weight",
    Default = false,
    Callback = function(value)
        if value then
            -- Add auto weight functionality here
        else
            -- Remove auto weight functionality here
        end
    end
})

Tabs.Main:AddToggle({
    Title = "Auto Pushup",
    Default = false,
    Callback = function(value)
        if value then
            -- Add auto pushup functionality here
        else
            -- Remove auto pushup functionality here
        end
    end
})
